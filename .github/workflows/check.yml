name: Run checks

on:
  push:
    branches: ["main"]
  pull_request: {}
  schedule:
    - cron: "0 15 * * FRI"  # weekly test: every Saturday 00:00 JST

env:
  CARGO_TERM_COLOR: always

jobs:
  lint:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12", "3.13"]
        exclude:
          - python-version: ${{ github.event_name != 'schedule' && '3.10' }}
          - python-version: ${{ github.event_name != 'schedule' && '3.11' }}
          - python-version: ${{ github.event_name != 'schedule' && '3.12' }}
    steps:
    - uses: actions/checkout@v4
    - name: Setup Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install
      run: pip install .[check]
    - name: Run checks
      run: |
        black --check cspuz tests
        flake8 cspuz tests
        mypy cspuz tests
  test-ubuntu:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12", "3.13"]
        exclude:
          - python-version: ${{ github.event_name != 'schedule' && '3.10' }}
          - python-version: ${{ github.event_name != 'schedule' && '3.11' }}
          - python-version: ${{ github.event_name != 'schedule' && '3.12' }}
    steps:
    - uses: actions/checkout@v4
    - name: Update Rust
      run: rustup update
    - name: Setup Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    - name: Build cspuz_core
      run: |
        cd ${{ runner.temp }}
        git clone --recursive https://github.com/semiexp/cspuz_core.git
        cd cspuz_core
        pip install .
    - name: Install cspuz
      run: pip install .[test]
    - name: Run tests
      run: pytest
  test-windows:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v4
    - name: Update Rust
      run: rustup update
    - name: Setup Python 3.13
      uses: actions/setup-python@v5
      with:
        python-version: 3.13
    - name: Build cspuz_core
      run: |
        cd ${{ runner.temp }}
        git clone --recursive https://github.com/semiexp/cspuz_core.git
        cd cspuz_core
        pip install .
    - name: Install cspuz
      run: pip install .[test]
    - name: Run tests
      run: pytest
  test-macos:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v4
    - name: Update Rust
      run: rustup update
    - name: Setup Python 3.13
      uses: actions/setup-python@v5
      with:
        python-version: 3.13
    - name: Build cspuz_core
      run: |
        cd ${{ runner.temp }}
        git clone --recursive https://github.com/semiexp/cspuz_core.git
        cd cspuz_core
        pip install .
    - name: Install cspuz
      run: pip install .[test]
    - name: Run tests
      run: pytest
  test-all-backends:
    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: ["3.9", "3.13"]
    if: github.event_name == 'schedule'
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v4
    - name: Update Rust
      run: rustup update
    - name: Setup Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    - name: Build csugar
      run: |
        cd ${{ runner.temp }}
        git clone https://github.com/semiexp/csugar.git
        cd csugar
        mkdir build
        cd build
        cmake -DCMAKE_BUILD_TYPE=Release .. && make
        cd ..
        pip install .
    - name: Build cspuz_core
      run: |
        cd ${{ runner.temp }}
        git clone --recursive https://github.com/semiexp/cspuz_core.git
        cd cspuz_core
        pip install .
    - name: Install cspuz
      run: pip install .[test]
    - name: Run tests
      run: pytest -m ""  # run all tests
